apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'bugly'


android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "top.smallc.picturebrower"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode VERSION_CODE as int
        versionName VERSION_NAME

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        signingConfig signingConfigs.debug

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    signingConfigs {
        release {
            storeFile file('photobrower.jks')
            keyAlias 'mzitu'
            keyPassword 'qaz521..'
            storePassword 'qaz521..'
        }
        debug {
            storeFile file('photobrower.jks')
            keyAlias 'mzitu'
            keyPassword 'qaz521..'
            storePassword 'qaz521..'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    //自动命名打包
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            //这里修改apk文件名
            outputFileName = "PB_${releaseTime()}_v${defaultConfig.versionName}.apk"
        }
    }
}

bugly {
    appId = 'b31be7b51c' // 注册时分配的App ID
    appKey = '5eb27938-0675-4cfc-a93c-7fc817674ba0' // 注册时分配的App Key
    debug = true
}
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("GMT"))
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:design:27.1.1'
    //*******************友盟************
    implementation 'com.umeng.sdk:common:1.5.1'
    implementation 'com.umeng.sdk:analytics:7.5.1'
    //**************腾讯*************************
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:3.3.1'
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.4'
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    implementation 'me.zhanghai.android.materialprogressbar:library:1.4.2'
    implementation 'com.lcodecorex:tkrefreshlayout:1.0.7'
    implementation 'me.drakeet.multitype:multitype:3.4.4'
    //图片处理
    implementation 'com.facebook.fresco:fresco:1.9.0'
    implementation 'jp.wasabeef:fresco-processors:2.1.0'
    //    implementation 'jp.wasabeef:glide-transformations:3.1.1'
    // If you want to use the GPU Filters
    ///implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
    //可缩放图片查看
    implementation 'me.relex:photodraweeview:1.1.3'

    implementation 'com.google.code.gson:gson:2.8.2'
}
